#!/bin/sh

#
# UNIVERSAL BOOKMARK MANAGER
#
# Bookmarks can be organized with tags.
#
# Why tags and not directories?
# Because humans tend to organize ideas in a network-like
# fashion. Tags can represent networks, while directories cannot,
# because a file cannot have multiple parent directories.
#

##########
# CONFIG #
##########
# The menu cmd must be defined such that the first argument passed
# is taken as the prompt text.
alias menu="tofi --prompt-text"
file="${XDG_DATA_HOME:-$HOME/.local/share}/bookmarks"
##########

alias help="echo \"Choose 'add', 'remove' or 'pick'.\""
alias pick_bookmark="cat $file | menu 'Pick: '"
alias remove_bookmark="cat $file | menu 'Remove: '"

if [ "$#" -ne 1 ]
then
  echo "Invalid number of arguments."
  help
  exit 1
fi

if [ "$1" = "add" ]
then
  # Add the current selection to the file
  bookmark="$(wl-paste --primary)"
  if [ -n "$bookmark" ]
  then
    if grep -q "^$bookmark$" "$file"
    then
      notify-send "Already bookmarked!"
    else
      echo "$bookmark" >> "$file"
      notify-send "Bookmark added!" "$bookmark"
    fi
  fi
elif [ "$1" = "remove" ]
then
  # Remove the chosen bookmark from the file
  bookmark="$(remove_bookmark)"
  if [ -n "$bookmark" ]
  then
    if sed -i "s|$bookmark||" "$file"
    then
      notify-send "Bookmark removed!" "$bookmark"
    else
      notify-send "Bookmark does not exist!" "$bookmark"
    fi
  fi
elif [ "$1" = "pick" ]
then
  # Let the user choose a bookmark and copy the chosen bookmark
  bookmark="$(pick_bookmark)"
  if [ -n "$bookmark" ]
  then
    if grep -q "^$bookmark$" "$file"
    then
      wl-copy "$bookmark"
      notify-send "Bookmark copied!"
    else
      notify-send "Bookmark does not exist!" "$bookmark"
    fi
  fi
else
  echo "Unknown option!"
  help
fi